@using System.Security.Claims;
@model RestaurantsPlatform.Web.ViewModels.Restaurants.DetailsRestaurantViewModel

@{
    ViewData["Title"] = Model.RestaurantName;
}

<div>
    <h1 class="text-center m-4">
        <span class="float-md-left">
            @if (Model.UserId == this.User.FindFirstValue(ClaimTypes.NameIdentifier))
            {
                <a class="btn btn-outline-primary" asp-route="restaurantWithAction" asp-route-id="@Model.Id" asp-route-name="@Model.RestaurantUrl" asp-route-action="update">
                    Update
                </a>
                <a class="btn btn-outline-danger" asp-route="restaurantWithAction" asp-route-id="@Model.Id" asp-route-name="@Model.RestaurantUrl" asp-route-action="delete">
                    Delete
                </a>
            }
        </span>
        @Model.RestaurantName
        <span class="badge badge-pill status">Open</span>
        <a class="likeBtn" href="#"><i class="heartIcon fa-heart float-right"></i></a>
    </h1>
</div>
<hr />
<div class="row mb-4">
    <div class="col-12 col-md-6">
        <div class="border rounded-lg pl-3 pt-4 h-100">
            <dl>
                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.RestaurantName)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.RestaurantName)</dd>
                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Description)</dt>
                <dd class="col-sm-10">
                    @if (Model.Description != null)
                    {
                        @Html.DisplayFor(model => model.Description)
                    }
                    else
                    {
                        <span>No information was given!</span>
                    }
                </dd>
                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Address)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.Address)</dd>
                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.OwnerName)</dt>
                <dd class="col-sm-10">
                    @if (Model.OwnerName != null)
                    {
                        @Html.DisplayFor(model => model.OwnerName)
                    }
                    else
                    {
                        <span>No information was given!</span>
                    }
                </dd>
                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.WorkingTime)</dt>
                <dd class="col-sm-10 workingTime">@Html.DisplayFor(model => model.WorkingTime)</dd>
                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.ContactInfo)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.ContactInfo)</dd>
            </dl>
        </div>
    </div>
    <div class="rounded-lg col-12 col-md-6 bg-secondary" style="height: 520px;" id="map"></div>
</div>

<div class="d-flex justify-content-around flex-wrap" id="galleryInfo">
    @if (Model.Images.Any())
    {
        @foreach (var image in Model.Images.Take(3))
        {
            <div class="mb-3">
                <img class="img-fluid display-image img-thumbnail" src="@image.ImageUrl" alt="Card image cap">
            </div>
        }
    }
</div>

<div class="text-center">
    @if (this.User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.UserId)
    {
        <form id="formToShow" method="POST" asp-controller="RestaurantImages" asp-action="AddImageToRestaurant">
            <div class="form-group">
                <input asp-for="Id" class="form-control" hidden />
            </div>
            <div class="form-group">
                <input asp-for="RestaurantName" class="form-control" hidden />
            </div>
            <div class="form-group">
                <label asp-for="ImageUrl" class="control-label"></label>
                <input asp-for="ImageUrl" class="form-control" />
                <span asp-validation-for="ImageUrl" class="text-danger"></span>
                @if (!this.Model.Images.Any())
                {
                    <small id="imageUrlHelp" class="form-text text-muted">First uploaded image will appear as presentation image in categories search</small>
                }
            </div>
            <div class="form-group">
                <input id="uploadPicture" class="btn btn-outline-success" value="Add picture to gallery" type="submit" />
            </div>
        </form>
        <button class="btn btn-outline-secondary" id="showForm">Add picture to gallery</button>
    }

    @if (Model.Images.Any())
    {
        <a id="showGallery" class="btn btn-outline-info" asp-route="restaurantImages" asp-route-id="@Model.Id" asp-route-name="@Model.RestaurantUrl" asp-route-action="gallery">
            Show gallery
        </a>
    }
</div>

@if (this.Model.Comments.Any())
{
    <div class="mt-5 border">
        <div>
            <nav class="d-flex flex-wrap justify-content-between bg-light">
                <div class="mx-auto">
                    <div class="nav-item active">
                        <a class="nav-link" href="#">
                            <i class="fa fa-comments"></i>
                            New Comments
                        </a>
                    </div>
                </div>
                <div class="vertical-row"></div>
                <div class="mx-auto">
                    <div class="nav-item">
                        <a class="nav-link" href="#">
                            <i class="fa fa-star"></i>
                            Popular Posts
                        </a>
                    </div>
                </div>
            </nav>

            @foreach (var comment in Model.Comments.OrderByDescending(comment => comment.CreatedOn).Take(5))
            {
                <div class="m-3 border rounded">
                    <div class="media position-relative">
                        <img class="pl-2 mr-3 profile-picture rounded" src="https://res.cloudinary.com/djlskbceh/image/upload/v1586961617/restaurant/16-168770_user-iconset-no-profile-picture-icon-circle-clipart_uyxcky.jpg" alt="Profile picture">
                        <div class="media-body">
                            <h5 class="mt-3">
                                @comment.AuthorUserName
                                <small class="text-muted"><time datetime="@comment.CreatedOn.ToString("O")"></time></small>
                                @if (comment.IsEdited)
                                {
                                    <small class="float-right text-muted d-block"><i class="fas fa-pencil-alt"></i> Edited</small>
                                }
                            </h5>

                            <span>
                                @comment.Content
                            </span>
                        </div>
                        @if (this.User.Identity.Name != null)
                        {
                            <div class="float-right text-center">
                                <form class="votesForm" method="post">
                                    <input asp-for="@comment.Id" hidden />
                                </form>
                                @if (!comment.Votes.Any(vote => vote.UserId == (this.User.FindFirstValue(ClaimTypes.NameIdentifier)))
                                  || (int)(comment.Votes.FirstOrDefault(vote => vote.UserId == (this.User.FindFirstValue(ClaimTypes.NameIdentifier))).Type) == 0)
                                {
                                    <div>
                                        <a class="nav-link upvote text-primary upvote">
                                            <i class="fa fa-arrow-up"></i>
                                        </a>
                                    </div>
                                    <div class="text-primary votes">
                                        @comment.VotesSum
                                    </div>
                                    <div>
                                        <a class="nav-link downvote text-primary downvote">
                                            <i class="fa fa-arrow-down"></i>
                                        </a>
                                    </div>
                                }
                                else
                                {
                                    @if ((int)(comment.Votes.FirstOrDefault(vote => vote.UserId == (this.User.FindFirstValue(ClaimTypes.NameIdentifier))).Type) == 1)
                                    {
                                        <div>
                                            <a class="nav-link upvote text-primary upvote">
                                                <i class="fas fa-arrow-circle-up"></i>
                                            </a>
                                        </div>
                                        <div class="text-primary votes">
                                            @comment.VotesSum
                                        </div>
                                        <div>
                                            <a class="nav-link downvote text-primary downvote">
                                                <i class="fa fa-arrow-down"></i>
                                            </a>
                                        </div>
                                    }
                                    else
                                    {
                                        <div>
                                            <a class="nav-link upvote text-primary upvote">
                                                <i class="fas fa-arrow-up"></i>
                                            </a>
                                        </div>
                                        <div class="text-primary votes">
                                            @comment.VotesSum
                                        </div>
                                        <div>
                                            <a class="nav-link downvote text-primary downvote">
                                                <i class="fa fa-arrow-circle-down"></i>
                                            </a>
                                        </div>
                                    }
                                }
                            </div>
                        }

                        @if (this.User.FindFirstValue(ClaimTypes.NameIdentifier) == comment.AuthorId)
                        {
                            <div class="position-absolute manipulateComment text-muted text-decoration-none">
                                <a asp-route="restaurantComment" asp-route-id="@Model.Id" asp-route-name="@Model.RestaurantUrl"
                                   asp-route-commentId="@comment.Id" asp-route-action="update" class="update-comment">
                                    <i class="fas fa-pencil-alt"></i> Edit
                                </a>
                                &nbsp;
                                <a asp-route="restaurantComment" asp-route-id="@Model.Id" asp-route-name="@Model.RestaurantUrl"
                                   asp-route-commentId="@comment.Id" asp-route-action="delete">
                                    Delete <i class="fas fa-backspace"></i>
                                </a>
                            </div>
                        }
                        else if (this.User.FindFirstValue(ClaimTypes.NameIdentifier) == this.Model.UserId)
                        {<div class="position-absolute manipulateComment text-muted text-decoration-none">
                                <a asp-route="restaurantComment" asp-route-id="@Model.Id" asp-route-name="@Model.RestaurantUrl"
                                   asp-route-commentId="@comment.Id" asp-route-action="delete">
                                    Delete <i class="fas fa-backspace"></i>
                                </a>
                            </div>
                        }
                    </div>
                </div>
            }
            <div class="align-bottom bg-light p-3">
                <a href="#fakelink"><i class="fa fa-share"></i> See all comments</a>
            </div>
        </div>
    </div>
}

<div class="col-12 col-md-8 mt-3">
    <h2 class="mb-3">Questions / Comments: </h2>
    <div>
        <form method="POST" asp-controller="Comments" asp-action="AddCommentToRestaurant">
            <div class="form-group">
                <input asp-for="Id" class="form-control" hidden />
            </div>
            <div class="form-group">
                <input asp-for="RestaurantName" class="form-control" hidden />
            </div>
            <div class="form-group">
                <textarea asp-for="CommentContent" class="form-control" rows="4" data-min-rows="4" placeholder="Enter your comment here">
            </textarea>
            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-outline-info" value="Post" />
            </div>
        </form>
    </div>
</div>

<a href="#" id="scrollToTop" class="btn btn-lg btn-secondary button-to-top rounded-circle">
    <i class="fas fa-arrow-up"></i>
</a>

@section scripts {
    <script type="text/javascript" src="~/js/functions/determinateRestaurantStatusByWorkingTime.js"></script>
    <script type="text/javascript" src="~/js/functions/favouriteButtonInRestaurantView.js"></script>
    @if (this.User.Identity.Name != null)
    {
        <script type="text/javascript" src="~/js/functions/votesAsync.js"></script>
    }
    @if (this.User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.UserId)
    {
        <script type="text/javascript" src="~/js/functions/manipulateImageInputForm.js"></script>
        <script type="text/javascript" src="~/js/functions/addImageAsync.js"></script>
    }
    <script type="text/javascript">
        const updateBtns = document.getElementsByClassName('update-comment');

        Array.from(updateBtns).forEach(updateBtn => {
            updateBtn.addEventListener('click', function (e) {
                e.preventDefault();
                const href = this.href;

                console.log(href);
            })
        })


    </script>
    @*<script type="text/javascript">
            async function getLatitude() {
                const address = $('dt:contains("Address")').next().text();
                const encodedAddress = encodeURI(address);
                const linkToFindLongtitudeAndLatitude = 'https://maps.googleapis.com/maps/api/geocode/json?address=' + encodedAddress + '&key=' + '@this.ViewBag.GoogleMapsApiKey';

                const result = await fetch(linkToFindLongtitudeAndLatitude)
                    .then(response => response.json())

                var latitute = +result['results'][0]['geometry']['location']['lat'];
                var longitude = +result['results'][0]['geometry']['location']['lng'];

                return { latitute, longitude };
            }

            async function InitializeMap() {
                const result = await getLatitude();

                var latlng = new google.maps.LatLng(result.latitute, result.longitude);

                var myOptions = {
                    zoom: 18,
                    center: latlng,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };

                var map = new google.maps.Map(document.getElementById("map"), myOptions);

                var marker = new google.maps.Marker({
                    position: latlng,
                    map: map,
                    title: '@Model.RestaurantName'
                });
            }
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=@this.ViewBag.GoogleMapsApiKey&callback=InitializeMap" async defer></script>*@
}